<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="closeApplication.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnDAwFMQCIJRZ6AAAC1UlEQVRYR+2WSW/TQBTH54A9Xlu2
        HtgPXFnVDxDE0sw4ERVSywWB2MRnoIWyXEFISHBBQkKUc4X4GuUK97JIcOEEtEKCwHvOf+w4jmOnCXDp
        TxrJ+b83/3kev7EjNhgGz5o67FvqEH7+WzwrOhJI9YvHfynCt6KzgdS/efA15NHSXkQ9CMMT2yAllBUQ
        BM3tNPehb+lzkAYjsNV1swBd34acUFaAL/XddH40B7kavhOdTyZL/ZPMjiOUUF5A/RjPRU6LPRHqz5jU
        +2nBb2ZiKOsXEcpQVgDjOfpCu1EphzzZG6FiKPGVMQ5svQA5R5UCGHp8N5I88obcGz7XJpnGWyEmLYRy
        VC2APSjnjcnl44tAHrrjRyaRGmcack+qFyBEaKvTqa96DDkPFbASG0r9RYhZG3JPBimAvdizXYBegZjF
        dU/uNIZU5SLkQgYrIO6FRZPvefUdkFMCR9dMAlV5C3IhlDPTkT8DuRDKWUjyaS3IKZnnJNUVyIW4rt5N
        d/WZjD+5bmMX5EJCqS8l/rY6AznFl9GptIDoKuQSapvaoxz2NP6ejBTkFN9qHEgK6HP+1ws14R3jT9+H
        g5BTxkVjCwVbcYLUS5BHBnm+RAGtMVHfCjkLBZdRwFfaWgfyCJh1ydO83pch5qGtn0cSjap9UE7n86cG
        vAk5j+NM7aGktXai/sCVIzQETY8W/YgC1hynuReB3tBpuIdkLuIF5HXj2/pp4if1fcjFcINQxe/SIvJ/
        RqrCpyn10e8Lm68bz9JHadL3jsnPeSsRrkDT8+3oWTJfqlXPakwiWI3Qjpodncs7Qc+RG7NfX9QceuNd
        5v5JF6cbKfmyFhLvBG1dh1lsyGeaBr1Y1DUefE1jKVMwDypk4DvvZkLUAiy2mjHvO9QPar4nQaAnYDM8
        8RGlf7e0AL+s4jdm12DtNd31vONE+zDt7zAupjfzt8OTWvPga9YQ3mAAhPgDxMsrTHFhbbgAAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="logOut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnDAwFLh/IdxURAAAB0UlEQVRYR92XO0/DMBDHLR52HTtl
        QAUECy+xwwIslIEqcYrYOvJZmGBnYkJMwA4bBQb4BCw8Jh6tgAnxCYBz6jRpm0p1IjcSf+lUyZeef7Yv
        5xySYqw0xrB3xLFbZ0R8aRkWtwVU5H6gJLIsb4Jj8cGJ+E1qNhUrKpy+OPFOgkCwokeAqeoY/GcXoZ0B
        FU5fEOBbAdwhVBlUw/1TsHqwUzXUX/1TgOIQI876KNqy1UB3mQCAxN6XMSG/HijdmFTD8TIBwLB7EMQF
        iCdKy1PK1SkTAOOoxKCoXTchsHgeIaUZ5W6VCYCGNi2oE5fN+Fi8jJDyrHKGMgcg5UNUQwj3NU/EnHI2
        ZBZAqkJh4osQQrzliTOvnP0AkBIEkvEsAlFrQugAWMPOEqymksRYztuG388Qwq3b2FvoGcCm3jI88xN5
        PrXJOpExgHuveQRiMbqtOpb6CNJJJqF7Hk4eeRPMA7S/hm21wCxAZyHqqIbmAPzJr8LJZSmOuQ9MAMRf
        Rs60crfKBEDm13HmHyTyk4znvLWeGhYzABrKHADOKevGxD0OdkFmrF84NAxK7F6q1kw1p+8BRBKzc86q
        CpdMnIsCFItDAKnBLsS34d0Mi5vk7TlCf8/Kh210CqHsAAAAAElFTkSuQmCC
</value>
  </data>
</root>